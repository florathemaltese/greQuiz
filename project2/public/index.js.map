{"version":3,"file":"index.js","mappings":";;;;;;;;;;AAAa;;AACb;AACA,IAAAA,QAAA,GAA+BC,mBAAO,CAAC,wCAAU,CAAC;EAA1CC,MAAM,GAAAF,QAAA,CAANE,MAAM;EAAEC,UAAU,GAAAH,QAAA,CAAVG,UAAU;AAC1B,IAAMC,OAAO,GAAGH,mBAAO,CAAC,0CAAW,CAAC;;AAEpC;AACA,IAAMI,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EACvB;EACA,OAAOC,KAAK,CAAC,cAAc,CAAC,CACvBC,IAAI,CAAC,UAAAC,GAAG,EAAI;IACT;IACA,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;MACT,OAAOD,GAAG,CAACE,IAAI,EAAE,CAACH,IAAI,CAAC,UAAAI,GAAG;QAAA,OAAIC,OAAO,CAACC,MAAM,CAAC;UAAEF,GAAG,EAAHA;QAAI,CAAC,CAAC;MAAA,EAAC;IAC1D;IACA;IACA,OAAOH,GAAG,CAACE,IAAI,EAAE;EACrB,CAAC,CAAC,CACDH,IAAI,CAAC,UAAAO,IAAA,EAAyC;IAAA,IAAtCC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;MAAEC,GAAG,GAAAF,IAAA,CAAHE,GAAG;MAAEC,gBAAgB,GAAAH,IAAA,CAAhBG,gBAAgB;IACpC;IACAb,OAAO,CAACW,QAAQ,GAAGA,QAAQ;IAC3BX,OAAO,CAACY,GAAG,GAAGA,GAAG;IACjBZ,OAAO,CAACc,YAAY,GAAGD,gBAAgB;EAC3C,CAAC,CAAC;AACV,CAAC;;AAGD;AACA,IAAME,aAAa,GAAG,SAAhBA,aAAaA,CAAIJ,QAAQ,EAAK;EAChC,OAAOT,KAAK,CAAC,cAAc,EAAE;IACzBc,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAET,QAAQ,EAARA;IAAS,CAAC;EACrC,CAAC,CAAC,CACGR,IAAI,CAAC,UAACC,GAAG,EAAK;IACX,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;MACT,OAAOD,GAAG,CAACE,IAAI,EAAE,CAACH,IAAI,CAAC,UAACI,GAAG;QAAA,OAAKC,OAAO,CAACC,MAAM,CAAC;UAAEF,GAAG,EAAHA;QAAI,CAAC,CAAC;MAAA,EAAC;IAC5D;IACA,OAAOH,GAAG,CAACE,IAAI,EAAE;EACrB,CAAC,CAAC,CACDH,IAAI,CAAC,UAACC,GAAG,EAAK;IACX,IAAQO,QAAQ,GAA4BP,GAAG,CAAvCO,QAAQ;MAAEC,GAAG,GAAuBR,GAAG,CAA7BQ,GAAG;MAAEC,gBAAgB,GAAKT,GAAG,CAAxBS,gBAAgB;IACvCb,OAAO,CAACW,QAAQ,GAAGA,QAAQ;IAC3BX,OAAO,CAACY,GAAG,GAAGA,GAAG;IACjBZ,OAAO,CAACc,YAAY,GAAGD,gBAAgB;EAC3C,CAAC,CAAC;AACV,CAAC;AACD;AACA,IAAMQ,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EACxB,OAAOnB,KAAK,CAAC,cAAc,EAAE;IACzBc,MAAM,EAAE;EACZ,CAAC,CAAC,SACQ,CAAC,UAACT,GAAG;IAAA,OAAKC,OAAO,CAACC,MAAM,CAAC;MAAEF,GAAG,EAAHA;IAAI,CAAC,CAAC;EAAA,EAAC,CACvCJ,IAAI,CAAC,UAACC,GAAG,EAAK;IACX,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;MACT,OAAOD,GAAG,CAACE,IAAI,EAAE,CAACH,IAAI,CAAC,UAACI,GAAG;QAAA,OAAKC,OAAO,CAACC,MAAM,CAACF,GAAG,CAAC;MAAA,EAAC;IACxD;IACA,OAAOH,GAAG,CAACE,IAAI,EAAE;EACrB,CAAC,CAAC,CACDH,IAAI,CAAC,YAAM;IACRH,OAAO,CAACW,QAAQ,GAAGW,SAAS;IAC5BtB,OAAO,CAACY,GAAG,GAAGU,SAAS;IACvBtB,OAAO,CAACuB,OAAO,GAAG,EAAE;EACxB,CAAC,CAAC;AACV,CAAC;AACD;AACA,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EACpB,OAAOtB,KAAK,CAAC,cAAc,CAAC,CACvBC,IAAI,CAAC,UAACC,GAAG,EAAK;IACX,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;MACT,OAAOD,GAAG,CAACE,IAAI,EAAE,CAACH,IAAI,CAAC,UAACI,GAAG;QAAA,OAAKC,OAAO,CAACC,MAAM,CAAC;UAAEF,GAAG,EAAHA;QAAI,CAAC,CAAC;MAAA,EAAC;IAC5D;IACA,OAAOH,GAAG,CAACE,IAAI,EAAE;EACrB,CAAC,CAAC,CACDH,IAAI,CAAC,UAACsB,OAAO,EAAK;IACf,IAAIA,OAAO,EAAE;MACTzB,OAAO,CAACuB,OAAO,GAAGE,OAAO;IAC7B;EACJ,CAAC,CAAC;AACV,CAAC;AACD;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,OAAO,EAAK;EAC7B,OAAOzB,KAAK,CAAC,cAAc,EAAE;IACzBc,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEO,OAAO,EAAPA;IAAQ,CAAC;EACpC,CAAC,CAAC;AACN,CAAC;;AAED;AACA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;EAC5B,IAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;EAC5CF,KAAK,CAACG,gBAAgB,CAAC,OAAO,EAAE,UAACC,CAAC,EAAK;IACnCA,CAAC,CAACC,cAAc,EAAE;IAClB,QAAQD,CAAC,CAACE,MAAM,CAACC,SAAS;MACtB,KAAK,mBAAmB;QACpB,IAAMzB,QAAQ,GAAGmB,QAAQ,CAACC,aAAa,CAAC,mBAAmB,CAAC,CAACM,KAAK;QAClEtB,aAAa,CAACJ,QAAQ,CAAC,CAClBR,IAAI,CAAC;UAAA,OAAMqB,SAAS,EAAE;QAAA,EAAC,CACvBrB,IAAI,CAAC;UAAA,OAAML,MAAM,EAAE;QAAA,EAAC,SACf,CAAC;UAAA,OAAMA,MAAM,EAAE;QAAA,EAAC;QAC1B;MACJ,KAAK,eAAe;QAChBuB,aAAa,EAAE,CAAClB,IAAI,CAAC;UAAA,OAAML,MAAM,EAAE;QAAA,EAAC;QACpC;MACJ,KAAK,oBAAoB;QACrB,IAAM6B,OAAO,GAAGG,QAAQ,CAACC,aAAa,CAAC,oBAAoB,CAAC,CAACM,KAAK;QAClErC,OAAO,CAACsC,YAAY,GAAG,EAAE;QACzBZ,WAAW,CAACC,OAAO,CAAC,SACV,CAAC,UAACpB,GAAG;UAAA,OAAKT,MAAM,EAAE;QAAA,EAAC,CACxBK,IAAI,CAAC;UAAA,OAAMqB,SAAS,EAAE;QAAA,EAAC,CACvBrB,IAAI,CAAC;UAAA,OAAML,MAAM,EAAE;QAAA,EAAC;QACzB;MACJ;QACI;IAAM;EAElB,CAAC,CAAC;EAEF,IAAMyC,WAAW,GAAGT,QAAQ,CAACC,aAAa,CAAC,mBAAmB,CAAC;EAC/DQ,WAAW,CAACP,gBAAgB,CAAC,OAAO,EAAE,UAACC,CAAC,EAAK;IACzCA,CAAC,CAACC,cAAc,EAAE;IAClBlC,OAAO,CAACsC,YAAY,GAAGL,CAAC,CAACE,MAAM,CAACE,KAAK;EACzC,CAAC,CAAC;AACN,CAAC;;AAID;AACA,IAAMG,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;EAC1BC,WAAW,CAAC,YAAM;IACd,OAAOxC,YAAY,EAAE,CAChBE,IAAI,CAAC;MAAA,OAAMqB,SAAS,EAAE;IAAA,EAAC,CACvBrB,IAAI,CAAC;MAAA,OAAMJ,UAAU,EAAE;IAAA,EAAC;EACjC,CAAC,EAAE,IAAI,CAAC;AACZ,CAAC;AAED2C,MAAM,CAACC,OAAO,GAAG;EACb1C,YAAY,EAAZA,YAAY;EACZc,aAAa,EAAbA,aAAa;EACbM,aAAa,EAAbA,aAAa;EACbG,SAAS,EAATA,SAAS;EACTE,WAAW,EAAXA,WAAW;EACXE,iBAAiB,EAAjBA,iBAAiB;EACjBY,eAAe,EAAfA;AACJ,CAAC;;;;;;;;;;ACnJY;;AACb;AACA,IAAMxC,OAAO,GAAGH,mBAAO,CAAC,0CAAW,CAAC;;AAEpC;AACA,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;EACjB8C,eAAe,EAAE;EACjBC,cAAc,EAAE;EAChB9C,UAAU,EAAE;EACZ+C,kBAAkB,EAAE;AACxB,CAAC;;AAED;AACA,IAAMD,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EACzB,IAAME,UAAU,GAAGjB,QAAQ,CAACC,aAAa,CAAC,iBAAiB,CAAC;EAChE;EACI,IAAI,CAAC/B,OAAO,CAACW,QAAQ,IAAI,CAACX,OAAO,CAACY,GAAG,EAAE;IACnCmC,UAAU,CAACC,SAAS,GAAG,EAAE;IACzB;EACJ;EACA,IAAMC,YAAY,GAAGjD,OAAO,CAACc,YAAY,CACpCoC,GAAG,CAAC,UAACvC,QAAQ;IAAA,OAAK,6BAA6B,GAAGA,QAAQ,GAAG,OAAO;EAAA,EAAC,CACrEwC,IAAI,CAAC,EAAE,CAAC;EACbJ,UAAU,CAACC,SAAS,GAAG,uCAAuC,GAAGC,YAAY,GAAG,OAAO;AAC3F,CAAC;;AAED;AACA,IAAMlD,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EACrB,IAAMqD,MAAM,GAAGtB,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;EAC9C;EACA,IAAI,CAAC/B,OAAO,CAACW,QAAQ,EAAE;IACnByC,MAAM,CAACJ,SAAS,GAAG,EAAE;IACrB;EACJ;;EAEJ;EACA;EACI,IAAMvB,OAAO,GAAGzB,OAAO,CAACuB,OAAO;EAC/B,IAAI8B,gBAAgB,GAAG,EAAE;EACzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG7B,OAAO,CAAC8B,MAAM,EAAED,CAAC,EAAE,EAAE;IACrC,IAAI,CAAC7B,OAAO,CAAC6B,CAAC,CAAC,EAAE;MACb;IACJ;IAEA,IAAM3C,QAAQ,GAAG6C,MAAM,CAACC,IAAI,CAAChC,OAAO,CAAC6B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C,IAAM3B,OAAO,GAAGF,OAAO,CAAC6B,CAAC,CAAC,CAAC3C,QAAQ,CAAC;IAEpC0C,gBAAgB,IAAI,6BAA6B,GAAG1C,QAAQ,GAAG,IAAI,GAAGgB,OAAO,GAAG,OAAO;EAC3F;EAEAyB,MAAM,CAACJ,SAAS,GAAGK,gBAAgB,GAC7B,2CAA2C,GAAGA,gBAAgB,GAAG,MAAM,GACvE,8DAA8D;;EAExE;EACID,MAAM,CAACM,MAAM,CAAC,CAAC,EAAEN,MAAM,CAACO,YAAY,CAAC;AACzC,CAAC;AAED,IAAMf,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;EAC1B,IAAMgB,MAAM,GAAG9B,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;EAClD;EACI,IAAI/B,OAAO,CAACW,QAAQ,IAAIX,OAAO,CAACY,GAAG,EAAE;IACjCgD,MAAM,CAACZ,SAAS,GAAG,iEAAiE,GAAGhD,OAAO,CAACW,QAAQ,GAAG,gEAAgE;EAC9K;EACJ;EAAA,KACS;IACDiD,MAAM,CAACZ,SAAS,GAAG,kBAAkB,GACjC,iDAAiD,GACjD,UAAU,GACV,qEAAqE,GACrE,UAAU,GACV,iEAAiE,GACjE,SAAS;EACjB;AACJ,CAAC;AAED,IAAMF,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;EAC7B,IAAMe,cAAc,GAAG/B,QAAQ,CAACC,aAAa,CAAC,cAAc,CAAC;EAC7D,IAAI,CAAC/B,OAAO,CAACW,QAAQ,EAAE;IACnBkD,cAAc,CAACb,SAAS,GAAG,EAAE;IAC7B;EACJ;EAEAa,cAAc,CAACb,SAAS,qJAAAc,MAAA,CAIqD9D,OAAO,CAACsC,YAAY,2GAIlG;AACH,CAAC;AAEDI,MAAM,CAACC,OAAO,GAAG;EAAE7C,MAAM,EAANA,MAAM;EAAEC,UAAU,EAAVA;AAAW,CAAC;;;;;;;;;;AC9F1B;;AACb,IAAMC,OAAO,GAAG;EACZW,QAAQ,EAAE,IAAI;EACdC,GAAG,EAAE,IAAI;EACTW,OAAO,EAAE,EAAE;EACXT,YAAY,EAAE,EAAE;EAChBwB,YAAY,EAAE;AAClB,CAAC;AAEDI,MAAM,CAACC,OAAO,GAAG3C,OAAO;;;;;;UCTxB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBa;;AACb;AACA,IAAAJ,QAAA,GAKIC,mBAAO,CAAC,8CAAe,CAAC;EAJxB+B,iBAAiB,GAAAhC,QAAA,CAAjBgC,iBAAiB;EACjB3B,YAAY,GAAAL,QAAA,CAAZK,YAAY;EACZuB,SAAS,GAAA5B,QAAA,CAAT4B,SAAS;EACTgB,eAAe,GAAA5C,QAAA,CAAf4C,eAAe;AAEnB,IAAAuB,SAAA,GAAmBlE,mBAAO,CAAC,4CAAc,CAAC;EAAlCC,MAAM,GAAAiE,SAAA,CAANjE,MAAM;;AAEd;AACAkE,UAAU,CAAC,YAAM;EACb/D,YAAY,EAAE,CACTE,IAAI,CAAC;IAAA,OAAMqB,SAAS,EAAE;EAAA,EAAC,CACvBrB,IAAI,CAAC;IAAA,OAAML,MAAM,EAAE;EAAA,EAAC;EACzBA,MAAM,EAAE;EACR;EACA8B,iBAAiB,EAAE;EACnBY,eAAe,EAAE;AACrB,CAAC,EAAE,IAAI,CAAC,C","sources":["webpack://project2/./client/src/ChatAPI.js","webpack://project2/./client/src/chatUI.js","webpack://project2/./client/src/storage.js","webpack://project2/webpack/bootstrap","webpack://project2/./client/index.js"],"sourcesContent":["\"use strict\";\r\n// Import dependencies\r\nconst { render, renderChat } = require(\"./chatUI\");\r\nconst storage = require(\"./storage\");\r\n\r\n// Fetch session data from the server\r\nconst fetchSession = () => {\r\n    // Send a GET request to the server\r\n    return fetch(\"/api/v1/user\")\r\n        .then(res => {\r\n            // If the response is not OK, reject the promise with the error\r\n            if (!res.ok) {\r\n                return res.json().then(err => Promise.reject({ err }));\r\n            }\r\n            // Otherwise, parse the response as JSON\r\n            return res.json();\r\n        })\r\n        .then(({ username, sid, loggedInUserList }) => {\r\n            // Update the storage object with the session data\r\n            storage.username = username;\r\n            storage.sid = sid;\r\n            storage.loggedInUser = loggedInUserList;\r\n        });\r\n};\r\n\r\n\r\n// create a new session\r\nconst createSession = (username) => {\r\n    return fetch(\"/api/v1/user\", {\r\n        method: \"PUT\",\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ username }),\r\n    })\r\n        .then((res) => {\r\n            if (!res.ok) {\r\n                return res.json().then((err) => Promise.reject({ err }));\r\n            }\r\n            return res.json();\r\n        })\r\n        .then((res) => {\r\n            const { username, sid, loggedInUserList } = res;\r\n            storage.username = username;\r\n            storage.sid = sid;\r\n            storage.loggedInUser = loggedInUserList;\r\n        });\r\n};\r\n// delete session\r\nconst deleteSession = () => {\r\n    return fetch(\"/api/v1/user\", {\r\n        method: \"DELETE\",\r\n    })\r\n        .catch((err) => Promise.reject({ err }))\r\n        .then((res) => {\r\n            if (!res.ok) {\r\n                return res.json().then((err) => Promise.reject(err));\r\n            }\r\n            return res.json();\r\n        })\r\n        .then(() => {\r\n            storage.username = undefined;\r\n            storage.sid = undefined;\r\n            storage.curChat = [];\r\n        });\r\n}\r\n// Fetches the chat messages\r\nconst fetchChat = () => {\r\n    return fetch(\"/api/v1/chat\")\r\n        .then((res) => {\r\n            if (!res.ok) {\r\n                return res.json().then((err) => Promise.reject({ err }));\r\n            }\r\n            return res.json();\r\n        })\r\n        .then((chatArr) => {\r\n            if (chatArr) {\r\n                storage.curChat = chatArr;\r\n            }\r\n        });\r\n}\r\n// Sends messages to the server\r\nconst sendMessage = (message) => {\r\n    return fetch(\"/api/v1/chat\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ message }),\r\n    });\r\n};\r\n\r\n// Initializes the event listeners for the app\r\nconst initEventListener = () => {\r\n    const appEl = document.querySelector(\"#app\");\r\n    appEl.addEventListener(\"click\", (e) => {\r\n        e.preventDefault();\r\n        switch (e.target.className) {\r\n            case \"user-login-submit\":\r\n                const username = document.querySelector(\".user-login-input\").value;\r\n                createSession(username)\r\n                    .then(() => fetchChat())\r\n                    .then(() => render())\r\n                    .catch(() => render());\r\n                break;\r\n            case \"logout-button\":\r\n                deleteSession().then(() => render());\r\n                break;\r\n            case \"new-message-submit\":\r\n                const message = document.querySelector(\".new-message-input\").value;\r\n                storage.messageDraft = \"\";\r\n                sendMessage(message)\r\n                    .catch((err) => render())\r\n                    .then(() => fetchChat())\r\n                    .then(() => render());\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    });\r\n\r\n    const chatInputEl = document.querySelector(\"#app .new-message\");\r\n    chatInputEl.addEventListener(\"input\", (e) => {\r\n        e.preventDefault();\r\n        storage.messageDraft = e.target.value;\r\n    });\r\n}\r\n\r\n\r\n\r\n// Initializes the polling for new chat messages\r\nconst initPollingChat = () => {\r\n    setInterval(() => {\r\n        return fetchSession()\r\n            .then(() => fetchChat())\r\n            .then(() => renderChat());\r\n    }, 5000);\r\n}\r\n\r\nmodule.exports = {\r\n    fetchSession,\r\n    createSession,\r\n    deleteSession,\r\n    fetchChat,\r\n    sendMessage,\r\n    initEventListener,\r\n    initPollingChat,\r\n};","\"use strict\";\r\n// Require the storage module\r\nconst storage = require(\"./storage\");\r\n\r\n// Define a function to render the whole UI\r\nconst render = () => {\r\n    renderUserLogin();\r\n    renderUserlist();\r\n    renderChat();\r\n    renderMessageInput();\r\n};\r\n\r\n// Define a function to render the list of logged-in users\r\nconst renderUserlist = () => {\r\n    const userlistEl = document.querySelector(\".loggedin-users\");\r\n// If the username and session ID are not set in the storage, clear the userlist element\r\n    if (!storage.username || !storage.sid) {\r\n        userlistEl.innerHTML = \"\";\r\n        return;\r\n    }\r\n    const userlistHTML = storage.loggedInUser\r\n        .map((username) => \"<li class='user-list-item'>\" + username + \"</li>\")\r\n        .join(\"\");\r\n    userlistEl.innerHTML = \"<p>User Name:</p><ul class=user-list>\" + userlistHTML + \"</ul>\";\r\n};\r\n\r\n// Define a function to render the chat messages\r\nconst renderChat = () => {\r\n    const chatEl = document.querySelector(\".chat\");\r\n    // If the username is not set in the storage, clear the chat element\r\n    if (!storage.username) {\r\n        chatEl.innerHTML = \"\";\r\n        return;\r\n    }\r\n\r\n// If there are chat messages in the storage, render them\r\n// Otherwise, display a message indicating that there are no chat messages yet\r\n    const chatArr = storage.curChat;\r\n    let chatListItemHTML = \"\";\r\n    for (let i = 0; i < chatArr.length; i++) {\r\n        if (!chatArr[i]) {\r\n            continue;\r\n        }\r\n\r\n        const username = Object.keys(chatArr[i])[0];\r\n        const message = chatArr[i][username];\r\n\r\n        chatListItemHTML += \"<li class='chat-list-item'>\" + username + \": \" + message + \"</li>\";\r\n    }\r\n\r\n    chatEl.innerHTML = chatListItemHTML\r\n        ? \"<p>Chat History: </p><ul class=chat-list>\" + chatListItemHTML + \"<ul>\"\r\n        : \"<p class='chat-list empty'>You do not have any chat yet.</p>\";\r\n\r\n// Scroll to the end of the chat element\r\n    chatEl.scroll(0, chatEl.scrollHeight);\r\n}\r\n\r\nconst renderUserLogin = () => {\r\n    const userEl = document.querySelector(\".user\");\r\n// If the username and session ID are set in the storage, render a logged-in user view\r\n    if (storage.username && storage.sid) {\r\n        userEl.innerHTML = \"<span class='username-prompt'>User Name <span class='username'>\" + storage.username + \"</span>.</span> <button class='logout-button'>Log out</button>\";\r\n    }\r\n// Otherwise, render a login form\r\n    else {\r\n        userEl.innerHTML = \"<form action=''>\" +\r\n            \"<span class='login-prompt'>Please log in</span>\" +\r\n            \"<label>:\" +\r\n            \"<input type='text' class='user-login-input' placeholder='Username'>\" +\r\n            \"</label>\" +\r\n            \"<button type='submit' class='user-login-submit'>Log In</button>\" +\r\n            \"</form>\";\r\n    }\r\n};\r\n\r\nconst renderMessageInput = () => {\r\n    const messageInputEl = document.querySelector(\".new-message\");\r\n    if (!storage.username) {\r\n        messageInputEl.innerHTML = \"\";\r\n        return;\r\n    }\r\n\r\n    messageInputEl.innerHTML = `\r\n  <form action=\"\">\r\n    <label>\r\n      Send Message:\r\n      <input type=\"text\" placeholder=\"Message\" class=\"new-message-input\" value=${storage.messageDraft}>\r\n    </label>\r\n    <button type=\"submit\" class=\"new-message-submit\">Send</button>\r\n  </form>\r\n  `;\r\n}\r\n\r\nmodule.exports = { render, renderChat };","\"use strict\";\r\nconst storage = {\r\n    username: null,\r\n    sid: null,\r\n    curChat: [],\r\n    loggedInUser: [],\r\n    messageDraft: \"\",\r\n};\r\n\r\nmodule.exports = storage;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\r\n// Importing necessary functions from external modules\r\nconst {\r\n    initEventListener,\r\n    fetchSession,\r\n    fetchChat,\r\n    initPollingChat,\r\n} = require(\"./src/ChatAPI\");\r\nconst { render } = require(\"./src/chatUI\");\r\n\r\n// Add a timeout delay to show a \"Loading\" indicator on the UI\r\nsetTimeout(() => {\r\n    fetchSession()\r\n        .then(() => fetchChat())\r\n        .then(() => render());\r\n    render();\r\n    // Set up the event listener and polling for real-time updates\r\n    initEventListener();\r\n    initPollingChat();\r\n}, 1000);"],"names":["_require","require","render","renderChat","storage","fetchSession","fetch","then","res","ok","json","err","Promise","reject","_ref","username","sid","loggedInUserList","loggedInUser","createSession","method","headers","body","JSON","stringify","deleteSession","undefined","curChat","fetchChat","chatArr","sendMessage","message","initEventListener","appEl","document","querySelector","addEventListener","e","preventDefault","target","className","value","messageDraft","chatInputEl","initPollingChat","setInterval","module","exports","renderUserLogin","renderUserlist","renderMessageInput","userlistEl","innerHTML","userlistHTML","map","join","chatEl","chatListItemHTML","i","length","Object","keys","scroll","scrollHeight","userEl","messageInputEl","concat","_require2","setTimeout"],"sourceRoot":""}